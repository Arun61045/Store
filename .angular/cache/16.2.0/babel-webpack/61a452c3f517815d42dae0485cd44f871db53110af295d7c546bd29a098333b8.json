{"ast":null,"code":"var _class;\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShopService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/';\n  }\n  getProducts(shopParams) {\n    let params = new HttpParams();\n    if (shopParams.brandId > 0) params = params.append('brandId', shopParams.brandId);\n    if (shopParams.typeId) params = params.append('typeId', shopParams.typeId);\n    params = params.append('sort', shopParams.sort);\n    params = params.append('page', shopParams.pageNumber);\n    params = params.append('pageSize', shopParams.pageSize);\n    return this.http.get(this.baseUrl + 'Products', {\n      params\n    });\n  }\n  getBrands() {\n    return this.http.get(this.baseUrl + 'products/brands');\n  }\n  getTypes() {\n    return this.http.get(this.baseUrl + 'products/types');\n  }\n}\n_class = ShopService;\n_class.ɵfac = function ShopService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","ShopService","constructor","http","baseUrl","getProducts","shopParams","params","brandId","append","typeId","sort","pageNumber","pageSize","get","getBrands","getTypes","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\My Project\\Store\\src\\app\\shop\\shop.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Pagination } from '../shared/Models/pagination';\nimport { Product } from '../shared/Models/product';\nimport { Brand } from '../shared/Models/brand';\nimport { Type } from '../shared/Models/type';\nimport { ShopParams } from '../shared/Models/shopParams';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n  baseUrl = 'https://localhost:5001/api/';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(shopParams:ShopParams){\n    let params = new HttpParams();\n\n    if (shopParams.brandId > 0) params = params.append('brandId',shopParams.brandId);\n    if (shopParams.typeId) params = params.append('typeId',shopParams.typeId);\n    params = params.append('sort',shopParams.sort);\n    params = params.append('page',shopParams.pageNumber);\n    params = params.append('pageSize',shopParams.pageSize);\n\n\n\n\n    \n    return this.http.get<Pagination<Product[]>>(this.baseUrl + 'Products', {params});\n  }\n   getBrands(){\n    return this.http.get<Brand[]>(this.baseUrl + 'products/brands');\n   }\n\n   getTypes(){\n    return this.http.get<Type[]>(this.baseUrl + 'products/types');\n   }\n\n}\n"],"mappings":";AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAW7D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,6BAA6B;EAEC;EAExCC,WAAWA,CAACC,UAAqB;IAC/B,IAAIC,MAAM,GAAG,IAAIP,UAAU,EAAE;IAE7B,IAAIM,UAAU,CAACE,OAAO,GAAG,CAAC,EAAED,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,SAAS,EAACH,UAAU,CAACE,OAAO,CAAC;IAChF,IAAIF,UAAU,CAACI,MAAM,EAAEH,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAACH,UAAU,CAACI,MAAM,CAAC;IACzEH,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,MAAM,EAACH,UAAU,CAACK,IAAI,CAAC;IAC9CJ,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,MAAM,EAACH,UAAU,CAACM,UAAU,CAAC;IACpDL,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,UAAU,EAACH,UAAU,CAACO,QAAQ,CAAC;IAMtD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAwB,IAAI,CAACV,OAAO,GAAG,UAAU,EAAE;MAACG;IAAM,CAAC,CAAC;EAClF;EACCQ,SAASA,CAAA;IACR,OAAO,IAAI,CAACZ,IAAI,CAACW,GAAG,CAAU,IAAI,CAACV,OAAO,GAAG,iBAAiB,CAAC;EAChE;EAEAY,QAAQA,CAAA;IACP,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAS,IAAI,CAACV,OAAO,GAAG,gBAAgB,CAAC;EAC9D;;SA1BUH,WAAW;;mBAAXA,MAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXnB,MAAW;EAAAoB,OAAA,EAAXpB,MAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}